/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.Color;
import java.awt.print.PrinterException;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.*;
import javax.swing.SwingUtilities;

/**
 *
 * @author Srinath
 */

 class MyCustomFilter extends javax.swing.filechooser.FileFilter {
        @Override
        public boolean accept(File file) {
            // Allow only directories, or files with ".txt" extension
            return file.isDirectory()||file.getAbsolutePath().endsWith(".ser");
        }
        @Override
        public String getDescription() {
            // This description will be displayed in the dialog,
            // hard-coded = ugly, should be done via I18N
            return "Diagram (*.ser)";
        }
    } 
class PopUpDemo extends JPopupMenu {
    JMenuItem anItem;
    JMenuItem anItem_1;
    public PopUpDemo(){
        anItem = new JMenuItem("Change Description !");
        add(anItem);
        JSeparator seperator=new JSeparator();
        add(seperator);
        anItem_1 = new JMenuItem("Delete..!");
        add(anItem_1);
        
    }
}
class PopUpDemo_1 extends JPopupMenu {
    JMenuItem anItem;
    JMenuItem anItem_1;
    JMenuItem anItem_2;
    JMenuItem anItem_3;
    public PopUpDemo_1(){
        anItem = new JMenuItem("Change Description !");
        add(anItem);
        JSeparator seperator=new JSeparator();
        add(seperator);
        anItem_1 = new JMenuItem("Delete..!");
        add(anItem_1);
        add(seperator);
        anItem_2 = new JMenuItem("Create Hierarchy...!");
        add(anItem_2);
        add(seperator);
        anItem_3 = new JMenuItem("View Hierarchy...!");
        add(anItem_3);
        
    }
}

public class Design extends javax.swing.JFrame {

    /**
     * Creates new form Design
     */
    public CASE a=null;
    public CASE_2 b=null;
    public Design() {
        initComponents();
        a=(CASE)draw_here;
        b=(CASE_2)draw_here1;
        change_color.setBackground(a.colour);
        change_color1.setBackground(b.colour);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {
                java.awt.GridBagConstraints gridBagConstraints;

                open_file_choose = new javax.swing.JFileChooser();
                color_choose = new javax.swing.JColorChooser();
                f_1 = new javax.swing.JFrame();
                l_1 = new javax.swing.JLabel();
                l_2 = new javax.swing.JLabel();
                p_descr = new javax.swing.JTextField();
                p_name = new javax.swing.JTextField();
                jButton2 = new javax.swing.JButton();
                l_3 = new javax.swing.JLabel();
                combo = new javax.swing.JComboBox();
                view_dd = new javax.swing.JDialog();
                jLabel2 = new javax.swing.JLabel();
                jScrollPane1 = new javax.swing.JScrollPane();
                text_dd = new javax.swing.JTextPane();
                jButton1 = new javax.swing.JButton();
                start = new javax.swing.JPanel();
                bs_new = new javax.swing.JButton();
                bs_open = new javax.swing.JButton();
                title = new javax.swing.JLabel();
                bg = new javax.swing.JLabel();
                new_open = new javax.swing.JPanel();
                menu = new javax.swing.JPanel();
                b_new = new javax.swing.JButton();
                b_open = new javax.swing.JButton();
                b_print = new javax.swing.JButton();
                b_color = new javax.swing.JButton();
                b_view_dd = new javax.swing.JButton();
                b_be = new javax.swing.JButton();
                change_color = new javax.swing.JPanel();
                b_Save = new javax.swing.JButton();
                jButton3 = new javax.swing.JButton();
                selection = new javax.swing.JPanel();
                b_entity = new javax.swing.JButton();
                b_datastore = new javax.swing.JButton();
                b_arrow = new javax.swing.JButton();
                b_circle = new javax.swing.JButton();
                draw = new javax.swing.JPanel();
                draw_here = new CASE();
                jLabel1 = new javax.swing.JLabel();
                new_design = new javax.swing.JPanel();
                menu_design = new javax.swing.JPanel();
                b_new1 = new javax.swing.JButton();
                b_open1 = new javax.swing.JButton();
                b_print1 = new javax.swing.JButton();
                b_color1 = new javax.swing.JButton();
                b_view_dd1 = new javax.swing.JButton();
                b_be1 = new javax.swing.JButton();
                change_color1 = new javax.swing.JPanel();
                b_Save1 = new javax.swing.JButton();
                jButton4 = new javax.swing.JButton();
                selection1 = new javax.swing.JPanel();
                b_module = new javax.swing.JButton();
                b_who_r_u = new javax.swing.JButton();
                b_lib = new javax.swing.JButton();
                b_arrow_1 = new javax.swing.JButton();
                draw1 = new javax.swing.JPanel();
                draw_here1 = new CASE_2();
                jLabel3 = new javax.swing.JLabel();

                f_1.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
                f_1.setMinimumSize(new java.awt.Dimension(575, 287));
                f_1.setResizable(false);
                f_1.addWindowListener(new java.awt.event.WindowAdapter() {
                        public void windowClosed(java.awt.event.WindowEvent evt) {
                                f_1WindowClosed(evt);
                        }
                });

                l_1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
                l_1.setText("Process Name :");

                l_2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
                l_2.setText("Process Description :");

                jButton2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
                jButton2.setText("Confirm");
                jButton2.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButton2ActionPerformed(evt);
                        }
                });

                l_3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
                l_3.setText("Choose From Existing Data types : ");

                combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Create New Data Type" }));
                combo.addItemListener(new java.awt.event.ItemListener() {
                        public void itemStateChanged(java.awt.event.ItemEvent evt) {
                                comboItemStateChanged(evt);
                        }
                });

                javax.swing.GroupLayout f_1Layout = new javax.swing.GroupLayout(f_1.getContentPane());
                f_1.getContentPane().setLayout(f_1Layout);
                f_1Layout.setHorizontalGroup(
                        f_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(f_1Layout.createSequentialGroup()
                                .addGap(172, 172, 172)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, f_1Layout.createSequentialGroup()
                                .addContainerGap(16, Short.MAX_VALUE)
                                .addGroup(f_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(f_1Layout.createSequentialGroup()
                                                .addComponent(l_3)
                                                .addGap(40, 40, 40)
                                                .addComponent(combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(f_1Layout.createSequentialGroup()
                                                .addGroup(f_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(l_1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(l_2, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(f_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(p_descr, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(p_name, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(41, 41, 41))
                );
                f_1Layout.setVerticalGroup(
                        f_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(f_1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(f_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(l_1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(p_name, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(f_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(f_1Layout.createSequentialGroup()
                                                .addGap(26, 26, 26)
                                                .addComponent(l_2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(f_1Layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(p_descr, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                                .addGroup(f_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(l_3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20))
                );

                f_1.setVisible(false);

                view_dd.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
                view_dd.setMinimumSize(new java.awt.Dimension(500, 450));

                jLabel2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
                jLabel2.setText("Data Dictionary");

                jScrollPane1.setHorizontalScrollBar(null);

                text_dd.setAutoscrolls(false);
                jScrollPane1.setViewportView(text_dd);

                jButton1.setText("Ok");
                jButton1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButton1ActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout view_ddLayout = new javax.swing.GroupLayout(view_dd.getContentPane());
                view_dd.getContentPane().setLayout(view_ddLayout);
                view_ddLayout.setHorizontalGroup(
                        view_ddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(view_ddLayout.createSequentialGroup()
                                .addGroup(view_ddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(view_ddLayout.createSequentialGroup()
                                                .addGap(148, 148, 148)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(view_ddLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)))
                                .addContainerGap())
                );
                view_ddLayout.setVerticalGroup(
                        view_ddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(view_ddLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(view_ddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(view_ddLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane1)
                                                .addContainerGap())
                                        .addGroup(view_ddLayout.createSequentialGroup()
                                                .addGap(169, 169, 169)
                                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addContainerGap(181, Short.MAX_VALUE))))
                );

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setTitle("CASE Tool");
                setMaximumSize(new java.awt.Dimension(1331, 660));
                setMinimumSize(new java.awt.Dimension(1331, 660));
                setPreferredSize(new java.awt.Dimension(1331, 660));
                setResizable(false);
                addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                                formMouseEntered(evt);
                        }
                });
                getContentPane().setLayout(new java.awt.CardLayout());

                start.setMaximumSize(new java.awt.Dimension(1331, 630));
                start.setMinimumSize(new java.awt.Dimension(1331, 630));
                start.setPreferredSize(new java.awt.Dimension(1331, 630));
                start.setLayout(null);

                bs_new.setText("New File");
                bs_new.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                bs_newActionPerformed(evt);
                        }
                });
                start.add(bs_new);
                bs_new.setBounds(340, 380, 210, 60);

                bs_open.setText("Open File");
                bs_open.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                bs_openActionPerformed(evt);
                        }
                });
                start.add(bs_open);
                bs_open.setBounds(910, 380, 200, 60);

                title.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
                title.setForeground(new java.awt.Color(244, 236, 236));
                title.setText("CASE TOOL");
                start.add(title);
                title.setBounds(560, 120, 270, 90);

                bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture.jpg"))); // NOI18N
                bg.setMaximumSize(new java.awt.Dimension(900, 600));
                bg.setMinimumSize(new java.awt.Dimension(900, 600));
                bg.setPreferredSize(new java.awt.Dimension(900, 600));
                start.add(bg);
                bg.setBounds(0, 0, 1330, 630);

                getContentPane().add(start, "card2\n");

                new_open.setBackground(new java.awt.Color(204, 204, 255));
                new_open.setMaximumSize(new java.awt.Dimension(1331, 630));
                new_open.setMinimumSize(new java.awt.Dimension(1331, 630));
                new_open.setPreferredSize(new java.awt.Dimension(1331, 630));

                menu.setBackground(new java.awt.Color(204, 204, 204));
                menu.setMaximumSize(new java.awt.Dimension(900, 30));
                menu.setMinimumSize(new java.awt.Dimension(900, 30));
                menu.setLayout(new java.awt.GridBagLayout());

                b_new.setText("New File");
                b_new.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                b_newActionPerformed(evt);
                        }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.gridheight = 2;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
                gridBagConstraints.insets = new java.awt.Insets(3, 179, 4, 0);
                menu.add(b_new, gridBagConstraints);

                b_open.setText("Open File");
                b_open.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                b_openActionPerformed(evt);
                        }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 1;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.gridheight = 2;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
                gridBagConstraints.insets = new java.awt.Insets(3, 0, 4, 0);
                menu.add(b_open, gridBagConstraints);

                b_print.setText("Print");
                b_print.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                b_printActionPerformed(evt);
                        }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 2;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.gridheight = 2;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
                gridBagConstraints.insets = new java.awt.Insets(3, 0, 4, 0);
                menu.add(b_print, gridBagConstraints);

                b_color.setText("Colour");
                b_color.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                b_colorActionPerformed(evt);
                        }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 3;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.gridheight = 2;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
                gridBagConstraints.insets = new java.awt.Insets(3, 0, 4, 0);
                menu.add(b_color, gridBagConstraints);

                b_view_dd.setText("View DD");
                b_view_dd.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                b_view_ddActionPerformed(evt);
                        }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 4;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.gridheight = 2;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
                gridBagConstraints.insets = new java.awt.Insets(3, 0, 4, 0);
                menu.add(b_view_dd, gridBagConstraints);

                b_be.setText("Balancing Errors");
                b_be.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                b_beActionPerformed(evt);
                        }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 5;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.gridheight = 2;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
                gridBagConstraints.insets = new java.awt.Insets(3, 0, 4, 0);
                menu.add(b_be, gridBagConstraints);

                change_color.setBackground(new java.awt.Color(204, 204, 0));
                change_color.setAlignmentX(1.0F);
                change_color.setPreferredSize(new java.awt.Dimension(20, 20));
                change_color.setRequestFocusEnabled(false);

                javax.swing.GroupLayout change_colorLayout = new javax.swing.GroupLayout(change_color);
                change_color.setLayout(change_colorLayout);
                change_colorLayout.setHorizontalGroup(
                        change_colorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 0, Short.MAX_VALUE)
                );
                change_colorLayout.setVerticalGroup(
                        change_colorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 0, Short.MAX_VALUE)
                );

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 6;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.ipadx = 20;
                gridBagConstraints.ipady = 20;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
                gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
                menu.add(change_color, gridBagConstraints);

                b_Save.setText("Save");
                b_Save.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                b_SaveActionPerformed(evt);
                        }
                });
                menu.add(b_Save, new java.awt.GridBagConstraints());

                jButton3.setText("Save As");
                jButton3.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButton3ActionPerformed(evt);
                        }
                });
                menu.add(jButton3, new java.awt.GridBagConstraints());

                selection.setMaximumSize(new java.awt.Dimension(180, 564));
                selection.setMinimumSize(new java.awt.Dimension(180, 564));

                b_entity.setText("Entity");
                b_entity.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                b_entityActionPerformed(evt);
                        }
                });

                b_datastore.setText("Data Store");
                b_datastore.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                b_datastoreActionPerformed(evt);
                        }
                });

                b_arrow.setText("Data Flow");
                b_arrow.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                b_arrowActionPerformed(evt);
                        }
                });

                b_circle.setText("Process");
                b_circle.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                b_circleActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout selectionLayout = new javax.swing.GroupLayout(selection);
                selection.setLayout(selectionLayout);
                selectionLayout.setHorizontalGroup(
                        selectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(b_entity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(b_datastore, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                        .addComponent(b_arrow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(b_circle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                );
                selectionLayout.setVerticalGroup(
                        selectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(selectionLayout.createSequentialGroup()
                                .addComponent(b_entity, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(b_circle, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_arrow, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_datastore, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                );

                draw.setAutoscrolls(true);
                draw.setMaximumSize(new java.awt.Dimension(1140, 630));
                draw.setMinimumSize(new java.awt.Dimension(1140, 630));
                draw.setOpaque(false);
                draw.setPreferredSize(new java.awt.Dimension(1140, 630));
                draw.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseReleased(java.awt.event.MouseEvent evt) {
                                drawMouseReleased(evt);
                        }
                });
                draw.setLayout(null);

                draw_here.setMaximumSize(new java.awt.Dimension(1140, 630));
                draw_here.setOpaque(false);
                draw_here.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                draw_hereMouseClicked(evt);
                        }
                        public void mousePressed(java.awt.event.MouseEvent evt) {
                                draw_hereMousePressed(evt);
                        }
                        public void mouseReleased(java.awt.event.MouseEvent evt) {
                                draw_hereMouseReleased(evt);
                        }
                });

                javax.swing.GroupLayout draw_hereLayout = new javax.swing.GroupLayout(draw_here);
                draw_here.setLayout(draw_hereLayout);
                draw_hereLayout.setHorizontalGroup(
                        draw_hereLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 1140, Short.MAX_VALUE)
                );
                draw_hereLayout.setVerticalGroup(
                        draw_hereLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 630, Short.MAX_VALUE)
                );

                draw.add(draw_here);
                draw_here.setBounds(0, 0, 1140, 630);

                jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bg.png"))); // NOI18N
                draw.add(jLabel1);
                jLabel1.setBounds(0, 0, 1140, 630);

                javax.swing.GroupLayout new_openLayout = new javax.swing.GroupLayout(new_open);
                new_open.setLayout(new_openLayout);
                new_openLayout.setHorizontalGroup(
                        new_openLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(new_openLayout.createSequentialGroup()
                                .addComponent(selection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(draw, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(menu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                );
                new_openLayout.setVerticalGroup(
                        new_openLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(new_openLayout.createSequentialGroup()
                                .addComponent(menu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(new_openLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(draw, javax.swing.GroupLayout.DEFAULT_SIZE, 635, Short.MAX_VALUE)
                                        .addComponent(selection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))
                );

                getContentPane().add(new_open, "card3");

                new_design.setBackground(new java.awt.Color(204, 204, 255));
                new_design.setMaximumSize(new java.awt.Dimension(1331, 630));
                new_design.setMinimumSize(new java.awt.Dimension(1331, 630));

                menu_design.setBackground(new java.awt.Color(204, 204, 204));
                menu_design.setMaximumSize(new java.awt.Dimension(900, 30));
                menu_design.setMinimumSize(new java.awt.Dimension(900, 30));
                menu_design.setLayout(new java.awt.GridBagLayout());

                b_new1.setText("New File");
                b_new1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                b_new1ActionPerformed(evt);
                        }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.gridheight = 2;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
                gridBagConstraints.insets = new java.awt.Insets(3, 179, 4, 0);
                menu_design.add(b_new1, gridBagConstraints);

                b_open1.setText("Open File");
                b_open1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                b_open1ActionPerformed(evt);
                        }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 1;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.gridheight = 2;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
                gridBagConstraints.insets = new java.awt.Insets(3, 0, 4, 0);
                menu_design.add(b_open1, gridBagConstraints);

                b_print1.setText("Print");
                b_print1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                b_print1ActionPerformed(evt);
                        }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 2;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.gridheight = 2;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
                gridBagConstraints.insets = new java.awt.Insets(3, 0, 4, 0);
                menu_design.add(b_print1, gridBagConstraints);

                b_color1.setText("Colour");
                b_color1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                b_color1ActionPerformed(evt);
                        }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 3;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.gridheight = 2;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
                gridBagConstraints.insets = new java.awt.Insets(3, 0, 4, 0);
                menu_design.add(b_color1, gridBagConstraints);

                b_view_dd1.setText("View DD");
                b_view_dd1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                b_view_dd1ActionPerformed(evt);
                        }
                });
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 4;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.gridheight = 2;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
                gridBagConstraints.insets = new java.awt.Insets(3, 0, 4, 0);
                menu_design.add(b_view_dd1, gridBagConstraints);

                b_be1.setText("Balancing Errors");
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 5;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.gridheight = 2;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
                gridBagConstraints.insets = new java.awt.Insets(3, 0, 4, 0);
                menu_design.add(b_be1, gridBagConstraints);

                change_color1.setBackground(new java.awt.Color(204, 204, 0));
                change_color1.setAlignmentX(1.0F);
                change_color1.setPreferredSize(new java.awt.Dimension(20, 20));
                change_color1.setRequestFocusEnabled(false);

                javax.swing.GroupLayout change_color1Layout = new javax.swing.GroupLayout(change_color1);
                change_color1.setLayout(change_color1Layout);
                change_color1Layout.setHorizontalGroup(
                        change_color1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 0, Short.MAX_VALUE)
                );
                change_color1Layout.setVerticalGroup(
                        change_color1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 0, Short.MAX_VALUE)
                );

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 6;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.ipadx = 20;
                gridBagConstraints.ipady = 20;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
                gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
                menu_design.add(change_color1, gridBagConstraints);

                b_Save1.setText("Save");
                b_Save1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                b_Save1ActionPerformed(evt);
                        }
                });
                menu_design.add(b_Save1, new java.awt.GridBagConstraints());

                jButton4.setText("Save As");
                jButton4.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButton4ActionPerformed(evt);
                        }
                });
                menu_design.add(jButton4, new java.awt.GridBagConstraints());

                selection1.setMaximumSize(new java.awt.Dimension(180, 564));
                selection1.setMinimumSize(new java.awt.Dimension(180, 564));

                b_module.setText("Modules");
                b_module.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                b_moduleActionPerformed(evt);
                        }
                });

                b_who_r_u.setText("Data Flow Arrows");
                b_who_r_u.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                b_who_r_uActionPerformed(evt);
                        }
                });

                b_lib.setText("Library Modules");
                b_lib.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                b_libActionPerformed(evt);
                        }
                });

                b_arrow_1.setText("Arrows");
                b_arrow_1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                b_arrow_1ActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout selection1Layout = new javax.swing.GroupLayout(selection1);
                selection1.setLayout(selection1Layout);
                selection1Layout.setHorizontalGroup(
                        selection1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(b_module, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(b_who_r_u, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                        .addComponent(b_lib, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(b_arrow_1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                );
                selection1Layout.setVerticalGroup(
                        selection1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(selection1Layout.createSequentialGroup()
                                .addComponent(b_module, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(b_arrow_1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_lib, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_who_r_u, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                );

                draw1.setAutoscrolls(true);
                draw1.setMaximumSize(new java.awt.Dimension(1140, 630));
                draw1.setMinimumSize(new java.awt.Dimension(1140, 630));
                draw1.setOpaque(false);
                draw1.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseReleased(java.awt.event.MouseEvent evt) {
                                draw1MouseReleased(evt);
                        }
                });
                draw1.setLayout(null);

                draw_here1.setMaximumSize(new java.awt.Dimension(1140, 630));
                draw_here1.setOpaque(false);
                draw_here1.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                draw_here1MouseClicked(evt);
                        }
                        public void mousePressed(java.awt.event.MouseEvent evt) {
                                draw_here1MousePressed(evt);
                        }
                        public void mouseReleased(java.awt.event.MouseEvent evt) {
                                draw_here1MouseReleased(evt);
                        }
                });

                javax.swing.GroupLayout draw_here1Layout = new javax.swing.GroupLayout(draw_here1);
                draw_here1.setLayout(draw_here1Layout);
                draw_here1Layout.setHorizontalGroup(
                        draw_here1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 1140, Short.MAX_VALUE)
                );
                draw_here1Layout.setVerticalGroup(
                        draw_here1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 630, Short.MAX_VALUE)
                );

                draw1.add(draw_here1);
                draw_here1.setBounds(0, 0, 1140, 630);

                jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bg.png"))); // NOI18N
                draw1.add(jLabel3);
                jLabel3.setBounds(0, 0, 1140, 630);

                javax.swing.GroupLayout new_designLayout = new javax.swing.GroupLayout(new_design);
                new_design.setLayout(new_designLayout);
                new_designLayout.setHorizontalGroup(
                        new_designLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(new_designLayout.createSequentialGroup()
                                .addComponent(selection1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(draw1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(menu_design, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                );
                new_designLayout.setVerticalGroup(
                        new_designLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(new_designLayout.createSequentialGroup()
                                .addComponent(menu_design, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(new_designLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(draw1, javax.swing.GroupLayout.DEFAULT_SIZE, 635, Short.MAX_VALUE)
                                        .addComponent(selection1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))
                );

                getContentPane().add(new_design, "card4");

                pack();
        }// </editor-fold>//GEN-END:initComponents

    private void bs_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bs_newActionPerformed

        Object[] options = {"Structured Analysis",
                    "Structured Design"};
int n = JOptionPane.showOptionDialog(null,
    "Do you want to draw DFD or Structure Chart..?",
    "Confirmation",
    JOptionPane.YES_NO_OPTION,
    JOptionPane.QUESTION_MESSAGE,
    null,     //do not use a custom Icon
    options,  //the titles of buttons
    options[0]); //default button title
        if(n==0)
        {
               a.diagram=new Diagram();
	a.diagram.datadictionary=new DataDictionary();
	a.diagram.datadictionary.datatypeList=new ArrayList<>();
	a.diagram.datadictionary.namesList=new ArrayList<>();
	a.diagram.arrowList=new ArrayList<>();
	a.diagram.lineList=new ArrayList<>();
	a.diagram.shapeList=new ArrayList<>();
        start.setVisible(false);
        new_open.setVisible(true);
        new_design.setVisible(false);
        b.type=0;
        }
        if(n==1)
        {
            a.type=0;
               b.diagram=new Structure_Diagram();
	b.diagram.datadictionary=new DataDictionary();
	b.diagram.datadictionary.datatypeList=new ArrayList<>();
	b.diagram.datadictionary.namesList=new ArrayList<>();
	b.diagram.arrowList=new ArrayList<>();
	b.diagram.dataList=new ArrayList<>();
	//b.diagram.lineList=new ArrayList<>();
	b.diagram.shapeList=new ArrayList<>();
        start.setVisible(false);
        new_design.setVisible(true);
        new_open.setVisible(false);
        }
        
        
     
    }//GEN-LAST:event_bs_newActionPerformed

    private void b_circleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_circleActionPerformed
        a.type=1;
    }//GEN-LAST:event_b_circleActionPerformed

    private void b_arrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_arrowActionPerformed
        a.type=2;
    }//GEN-LAST:event_b_arrowActionPerformed

    private void b_colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_colorActionPerformed
        color_choose.setVisible(true);   
        JFrame guiFrame = new JFrame();
        a.colour = color_choose.showDialog(guiFrame, "Pick a Color"
                , Color.blue);
        change_color.setBackground(a.colour);
System.out.println(a.colour);// TODO add your handling code here:
    }//GEN-LAST:event_b_colorActionPerformed

    private void bs_openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bs_openActionPerformed
        JFileChooser saveFile = new JFileChooser();
	saveFile.setFileFilter(new MyCustomFilter());
        saveFile.showOpenDialog(null);
	String s="test.ser";
	try {
		if(saveFile.getSelectedFile()==null)
			return;
		s=saveFile.getSelectedFile().getCanonicalPath();
		} catch (IOException e) {
			s=saveFile.getSelectedFile().getName();

		}
        if(s.contains("_SA.ser")){
	a.diagram=Diagram.get_serialize(s);
	start.setVisible(false);
        new_open.setVisible(true);
        new_design.setVisible(false);
        b.type=0;
        
        }
        if(s.contains("_SD.ser"))
        {
            a.type=0;
            b.diagram=Structure_Diagram.get_serialize(s);
	start.setVisible(false);
        new_open.setVisible(false);
        new_design.setVisible(true);
        }
        System.out.println("asdfsadf");
    }//GEN-LAST:event_bs_openActionPerformed

    private void b_entityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_entityActionPerformed
           a.type=3;
    }//GEN-LAST:event_b_entityActionPerformed

    private void drawMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawMouseReleased
       System.out.println("eeeeeeeeeee");
    }//GEN-LAST:event_drawMouseReleased
private int prev_size;
private int prev_size_1;
private int prev_size_2;



    private void doPop(java.awt.event.MouseEvent e){
	    System.out.println("lasdjfalksdjfalskfdj;aj");
            int x=e.getX();
            int y=e.getY();
            if(a.type==4 || a.type==3)
            {
                System.out.println("I cam here");
                if (a.getRec(x, y) >= 0)
                {
                    System.out.println("noo.. cam here");
                    PopUpDemo menu = new PopUpDemo();
                    menu.show(e.getComponent(), e.getX(), e.getY());
                    menu.anItem.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                if(a.type==3)
                {
                    get_back();
                    l_1.setText("Entity Name");
                    l_2.setText("Entity Description");
            
                }
                else
                {
                    get_back_1();
                }
            }
        });
            menu.anItem_1.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                System.out.println("aaa:"+a.getRec(evt.getXOnScreen(),evt.getYOnScreen()));
//formMouseEntered(evt);
                a.remove(a.currentSquareIndex);
                
                //this.setEnabled(false);
            }
        });
                }
            }
            
            if(a.type==2)
            {
               // System.out.println("I cam here");
                if (a.getRec_1(x, y) >= 0 || a.getRec (x, y) >= 0)
                {
                    //System.out.println("noo.. cam here");
                    PopUpDemo menu = new PopUpDemo();
                    menu.show(e.getComponent(), e.getX(), e.getY());
                    menu.anItem.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseReleased(java.awt.event.MouseEvent evt) {
               
                    get_back_1();
                
            }
        });
            menu.anItem_1.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                System.out.println("aaa:"+a.getRec(evt.getXOnScreen(),evt.getYOnScreen()));
//formMouseEntered(evt);
                a.remove(a.currentCurveIndex);
                
                //this.setEnabled(false);
            }
        });
                }
            }
            
            if(b.type==2||b.type==3)
            {
               // System.out.println("I cam here");
                if (b.getRec_1(x, y) >= 0 || b.getRec (x, y) >= 0)
                {
                    //System.out.println("noo.. cam here");
                    PopUpDemo menu = new PopUpDemo();
                    menu.show(e.getComponent(), e.getX(), e.getY());
                    menu.anItem.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseReleased(java.awt.event.MouseEvent evt) {
               
                    get_back_1();
                
            }
        });
            menu.anItem_1.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                System.out.println("aaa:"+b.currentCurveIndex);
//formMouseEntered(evt);
                b.remove(b.currentCurveIndex);
                
                //this.setEnabled(false);
            }
        });
                }
            }
            
            
            
            if(a.type==1)
            {
                System.out.println("I cam here");
                if (a.getRec(x, y) >= 0)
                {
                    System.out.println("noo.. cam here");
                    PopUpDemo_1 menu1 = new PopUpDemo_1();
                    menu1.show(e.getComponent(), e.getX(), e.getY());
                    menu1.anItem.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                //formMouseEntered(evt);
                get_back();
                l_1.setText("Process Name");
                l_2.setText("Process Description");
            
                //this.setEnabled(false);
            }
        });
            menu1.anItem_1.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                System.out.println("aaa:"+a.getRec(evt.getXOnScreen(),evt.getYOnScreen()));
//formMouseEntered(evt);
                a.remove(a.currentSquareIndex);
                
                //this.setEnabled(false);
            }
        });
	    menu1.anItem_3.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                //System.out.println("aaa:"+a.getRec(evt.getXOnScreen(),evt.getYOnScreen()));
//formMouseEntered(evt);
		    if(((Bubble)a.diagram.shapeList.get(a.currentSquareIndex)).hasModule){

                	Design hierarchy=new Design();
                	hierarchy.a.diagram=((Bubble)a.diagram.shapeList.get(a.currentSquareIndex)).module;
		hierarchy.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
		hierarchy.setVisible(true);
                hierarchy.start.setVisible(false);
                hierarchy.new_open.setVisible(true);
                hierarchy.b_new.setVisible(false);
                hierarchy.b_open.setVisible(false);
                hierarchy.b_Save.setVisible(false);
                hierarchy.jButton3.setVisible(false);
		    }
                //this.setEnabled(false);
            }
        });
            menu1.anItem_2.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseReleased(java.awt.event.MouseEvent evt) {
		   
                Design hierarchy=new Design();
		hierarchy.a.diagram=new Diagram();
		hierarchy.a.diagram.datadictionary=a.diagram.datadictionary;
		((Bubble)a.diagram.shapeList.get(a.currentSquareIndex)).hasModule=true;
		((Bubble)a.diagram.shapeList.get(a.currentSquareIndex)).module=hierarchy.a.diagram;
		hierarchy.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                hierarchy.a.diagram.arrowList=new ArrayList<>();
                hierarchy.a.diagram.lineList=new ArrayList<>();
                hierarchy.a.type=0;
                hierarchy.b.type=-1;
                hierarchy.a.diagram.shapeList=new ArrayList<>();
                hierarchy.setVisible(true);
                hierarchy.start.setVisible(false);
                hierarchy.new_open.setVisible(true);
                hierarchy.b_new.setVisible(false);
                hierarchy.b_open.setVisible(false);
                hierarchy.b_Save.setVisible(false);
                hierarchy.jButton3.setVisible(false);
                
                //this.setEnabled(false);
            }
        });
                }
            }
            
            
            if(b.type==1)
            {
                System.out.println("I cam here");
                if (b.getRec(x, y) >= 0)
                {
                    System.out.println("noo.. cam here");
                    PopUpDemo_1 menu1 = new PopUpDemo_1();
                    menu1.show(e.getComponent(), e.getX(), e.getY());
                    menu1.anItem.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                //formMouseEntered(evt);
                get_back();
                l_1.setText("Module Name");
                l_2.setText("Module Description");
            
                //this.setEnabled(false);
            }
        });
            menu1.anItem_1.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                System.out.println("aaa:"+b.getRec(evt.getXOnScreen(),evt.getYOnScreen()));
//formMouseEntered(evt);
                b.remove(b.currentSquareIndex);
                
                //this.setEnabled(false);
            }
        });
	    menu1.anItem_3.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                //System.out.println("aaa:"+a.getRec(evt.getXOnScreen(),evt.getYOnScreen()));
//formMouseEntered(evt);
		    if(((Module)b.diagram.shapeList.get(b.currentSquareIndex)).hasModule){

                	Design hierarchy=new Design();
                	hierarchy.b.diagram=((Module)b.diagram.shapeList.get(b.currentSquareIndex)).child;
		hierarchy.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
		hierarchy.setVisible(true);
                hierarchy.start.setVisible(false);
                hierarchy.new_open.setVisible(false);
                hierarchy.new_design.setVisible(true);
                hierarchy.b_new1.setVisible(false);
                hierarchy.b_open1.setVisible(false);
                hierarchy.b_Save1.setVisible(false);
                hierarchy.jButton4.setVisible(false);
		    }
                //this.setEnabled(false);
            }
        });
            menu1.anItem_2.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseReleased(java.awt.event.MouseEvent evt) {
		   
                Design hierarchy=new Design();
		hierarchy.b.diagram=new Structure_Diagram();
		hierarchy.b.diagram.datadictionary=b.diagram.datadictionary;
		((Module)b.diagram.shapeList.get(b.currentSquareIndex)).hasModule=true;
		((Module)b.diagram.shapeList.get(b.currentSquareIndex)).child=hierarchy.b.diagram;
		hierarchy.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                hierarchy.b.diagram.arrowList=new ArrayList<>();
                hierarchy.a.type=-1;
                hierarchy.b.type=1;
                //hierarchy.b.diagram.lineList=new ArrayList<>();
                System.out.print("baby doll");
                hierarchy.b.diagram.dataList=new ArrayList<>();
                hierarchy.b.diagram.shapeList=new ArrayList<>();
                hierarchy.setVisible(true);
                hierarchy.start.setVisible(false);
                hierarchy.new_design.setVisible(true);
                hierarchy.b_new1.setVisible(false);
                hierarchy.b_open1.setVisible(false);
                hierarchy.b_Save1.setVisible(false);
                hierarchy.jButton4.setVisible(false);
                
                //this.setEnabled(false);
            }
        });
                }
            }
        
        }
    private void get_back()
    {
        f_1.setVisible(true);
            p_name.setText("");
            p_descr.setText("");
            l_1.setVisible(true);
            l_2.setVisible(true);
            p_descr.setVisible(true);
            p_name.setVisible(true);
            l_3.setVisible(false);
            combo.setVisible(false);
            this.setEnabled(false);
    }
    private void get_back_1()
    {
        l_1.setText("Datatype Name");
            l_2.setText("Datatype Definition");
            l_3.setVisible(true);
	   // System.out.println(combo.getItemCount());
	    
	    System.out.println("a.type"+a.type);
            if(a.type!=0&&a.type!=-1)
            {
                for(int i=combo.getItemCount()-1;i>=1&&i<combo.getItemCount();i--)
		    combo.removeItemAt(i);
                System.out.println("oooooooooooooooooasdfasf"+a.diagram.datadictionary.namesList.size());
	    	for(int i=0;i<a.diagram.datadictionary.namesList.size();i++){
		    combo.addItem(a.diagram.datadictionary.namesList.get(i));
	    	}
                System.out.println(combo.getItemCount());
            }
            else if(b.type==3)
            {
             System.out.println("xxxxxxxxxxxxxxxxxxxxxxxxxxasdfasf"+b.diagram.datadictionary.namesList.size());
	     for(int i=combo.getItemCount()-1;i>=1&&i<combo.getItemCount();i--)
		    combo.removeItemAt(i);
	    for(int i=0;i<b.diagram.datadictionary.namesList.size();i++){
		    combo.addItem(b.diagram.datadictionary.namesList.get(i));
	    }
                System.out.println(combo.getItemCount());
            }
            combo.setVisible(true);
            f_1.setVisible(true);
            p_name.setText("");
            p_descr.setText("");
            this.setEnabled(false);
    }
    

    private void draw_hereMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_draw_hereMouseReleased
        int new_size=a.diagram.shapeList.size();
        int new_size_1=a.diagram.arrowList.size();
        this.setAlwaysOnTop(false);
        if(a.type==1 && !a.dragging && !a.is_inside && new_size>prev_size) 
        {
            //System.out.println("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
            
            get_back();
            l_1.setText("Process Name");
            l_2.setText("Process Description");
            
            
        }
        if((a.type==3) && !a.dragging && !a.is_inside && new_size>prev_size) 
        {
            get_back();
            l_1.setText("Entity Name");
         
            l_2.setText("Entity Description");
        }
	if((a.type==4) && !a.dragging && !a.is_inside && new_size>prev_size) 
        {
            get_back_1();
        }
        if((a.type==2) && !a.dragging && new_size_1>prev_size_1) 
        {
            get_back_1();
        }
        if(SwingUtilities.isRightMouseButton(evt)){
	    System.out.println("lasdjf");
        if (evt.isPopupTrigger()){
	    System.out.println("lasdjfalksdjfalskfdj;aj");
            doPop(evt);
	    System.out.println("lasdjfalksdjfalskfdj;aj");
	}
    } 
// TODO add your handling code here:
    }//GEN-LAST:event_draw_hereMouseReleased

    private void draw_hereMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_draw_hereMousePressed
        System.out.println("nooooo");
        prev_size=a.diagram.shapeList.size();
        prev_size_1=a.diagram.arrowList.size();
       // prev_size_2=b.diagram.dataList.size();
          if(SwingUtilities.isRightMouseButton(evt)){
	    System.out.println("lasdjf");
        if (evt.isPopupTrigger()){
	    System.out.println("lasdjfalksdjfalskfdj;aj");
            doPop(evt);
	    System.out.println("lasdjfalksdjfalskfdj;aj");
	}
    } 

    }//GEN-LAST:event_draw_hereMousePressed

    private void f_1WindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_f_1WindowClosed
        this.setEnabled(true);
        this.setAlwaysOnTop(true);
    }//GEN-LAST:event_f_1WindowClosed

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        this.setAlwaysOnTop(false);        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseEntered

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        
        
        String var1=p_name.getText();
        String var2=p_descr.getText();
        System.out.println("shh"+a.type);
            //System.out.println("shh "+var1 );
        if(("".equals(var1) || "".equals(var2))&&l_1.isVisible())
        {
            JOptionPane.showMessageDialog(null, "Please Enter All the Details... :')");
            
        }
        else if(a.type==1  || a.type==3)
        {
            a.diagram.shapeList.get(a.currentSquareIndex).name=p_name.getText();
            a.diagram.shapeList.get(a.currentSquareIndex).description=p_descr.getText();
            a.repaint();
            System.out.println("f**k");
            f_1.dispose();
            this.setEnabled(true);
            this.setAlwaysOnTop(true);
        }
        else if(b.type==1  )
        {
            b.diagram.shapeList.get(b.currentSquareIndex).name=p_name.getText();
            b.diagram.shapeList.get(b.currentSquareIndex).description=p_descr.getText();
            b.repaint();
            System.out.println("f**k");
            f_1.dispose();
            this.setEnabled(true);
            this.setAlwaysOnTop(true);
        }
        else if(b.type==2  )
        {
            if(combo.getSelectedIndex()==0){
				DataType foo=new DataType();
				foo.name=p_name.getText();
				foo.definition=p_descr.getText();
            			b.diagram.arrowList.get(b.currentCurveIndex).datatype=foo;
				b.diagram.datadictionary.datatypeList.add(foo);
				b.diagram.datadictionary.namesList.add(foo.name);
				combo.addItem(p_name.getText());

			}
			else{

			int index=b.diagram.datadictionary.namesList.indexOf((String)combo.getSelectedItem());
			
   		b.diagram.arrowList.get(b.currentCurveIndex).datatype=b.diagram.datadictionary.datatypeList.get(index);

						}
            			b.repaint();
                                f_1.dispose();
            this.setEnabled(true);
            this.setAlwaysOnTop(true);
        }
         else if(b.type==3  )
        {
            if(combo.getSelectedIndex()==0){
				DataType foo=new DataType();
				foo.name=p_name.getText();
				foo.definition=p_descr.getText();
                                System.out.println("###########"+b.currentCurveIndex);
                                System.out.println("############"+b.diagram.dataList.size());
            			b.diagram.dataList.get(b.currentCurveIndex).datatype=foo;
				b.diagram.datadictionary.datatypeList.add(foo);
				b.diagram.datadictionary.namesList.add(foo.name);
				combo.addItem(p_name.getText());

			}
			else{

			int index=b.diagram.datadictionary.namesList.indexOf((String)combo.getSelectedItem());
			
   		b.diagram.dataList.get(b.currentCurveIndex).datatype=b.diagram.datadictionary.datatypeList.get(index);

						}
            			b.repaint();
                                f_1.dispose();
            this.setEnabled(true);
            this.setAlwaysOnTop(true);
        }
        else if(a.type==2||a.type==4)
        {
		if(a.type==4){
			if(combo.getSelectedIndex()==0){
				DataType foo=new DataType();
				foo.name=p_name.getText();
				foo.definition=p_descr.getText();
				((DataStore)a.diagram.shapeList.get(a.currentSquareIndex)).datatype=foo;
				a.diagram.datadictionary.datatypeList.add(foo);
				a.diagram.datadictionary.namesList.add(foo.name);
				combo.addItem(p_name.getText());

			}
			else{
				((DataStore)a.diagram.shapeList.get(a.currentSquareIndex)).datatype=new DataType();

			int index=a.diagram.datadictionary.namesList.indexOf((String)combo.getSelectedItem());
			((DataStore)a.diagram.shapeList.get(a.currentSquareIndex)).datatype=a.diagram.datadictionary.datatypeList.get(index);
			}

			a.repaint();

		}
		if(a.type==2){
if(combo.getSelectedIndex()==0){
				DataType foo=new DataType();
				foo.name=p_name.getText();
				foo.definition=p_descr.getText();
            			a.diagram.arrowList.get(a.currentCurveIndex).datatype=foo;
				a.diagram.datadictionary.datatypeList.add(foo);
				a.diagram.datadictionary.namesList.add(foo.name);
				combo.addItem(p_name.getText());

			}
			else{

			int index=a.diagram.datadictionary.namesList.indexOf((String)combo.getSelectedItem());
			
   		a.diagram.arrowList.get(a.currentCurveIndex).datatype=a.diagram.datadictionary.datatypeList.get(index);

						}
            			a.repaint();
		}
            
            f_1.dispose();
            this.setEnabled(true);
            this.setAlwaysOnTop(true);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

        private void b_datastoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_datastoreActionPerformed
                // TODO add your handling code here:
		a.type=4;
        }//GEN-LAST:event_b_datastoreActionPerformed

        private void draw_hereMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_draw_hereMouseClicked
                  if(SwingUtilities.isRightMouseButton(evt)){
		
    } 
		  else{
			  if(a.type==1 && a.currentSquareIndex!=-1){
    		//		int x = evt.getX();
    		//		int y = evt.getY();
    				if (evt.getClickCount() >= 2) {
					if(((Bubble)a.diagram.shapeList.get(a.currentSquareIndex)).hasModule){

                	Design hierarchy=new Design();
                	hierarchy.a.diagram=((Bubble)a.diagram.shapeList.get(a.currentSquareIndex)).module;
		hierarchy.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
		hierarchy.setVisible(true);
                hierarchy.start.setVisible(false);
                hierarchy.new_open.setVisible(true);
                hierarchy.b_new.setVisible(false);
                hierarchy.b_open.setVisible(false);
                hierarchy.b_Save.setVisible(false);
                hierarchy.jButton3.setVisible(false);
		    }

    	}
    }
		  }
      // TODO add your handling code here:
        }//GEN-LAST:event_draw_hereMouseClicked

        private void b_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_SaveActionPerformed
                // TODO add your handling code here:
		if(a.diagram.hassavename){
			Diagram.set_serialisable(a.diagram, a.diagram.savename);
			return;
		}
		JFileChooser foo=new JFileChooser();
		foo.setFileFilter(new MyCustomFilter());
		int ret=foo.showSaveDialog(null);
		String s;
		try {
			if(foo.getSelectedFile()==null)
				return;
			s=foo.getSelectedFile().getCanonicalPath();
		} catch (IOException e) {
			s=foo.getSelectedFile().getName();

		}
		
		s=s+"_SA"+".ser";
		a.diagram.hassavename=true;
		a.diagram.savename=s;

		System.out.println(s);
		Diagram.set_serialisable(a.diagram,s);
        }//GEN-LAST:event_b_SaveActionPerformed

    private void comboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboItemStateChanged
        
        String check="Create New Data Type";
        if(!check.equals(combo.getSelectedItem().toString()))
        {
            l_1.setVisible(false);
            l_2.setVisible(false);
            p_descr.setVisible(false);
            p_name.setVisible(false);
        }
        else
        {
            l_1.setVisible(true);
            l_2.setVisible(true);
            p_descr.setVisible(true);
            p_name.setVisible(true);
            p_name.setText("");
            p_descr.setText("");
        }

// TODO add your handling code here:
    }//GEN-LAST:event_comboItemStateChanged

    private void b_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_printActionPerformed
        Printing printing=new Printing(a);
        try {
            printing.print();
        } catch (PrinterException ex) {
            Logger.getLogger(Design.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_b_printActionPerformed

    private void b_view_ddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_view_ddActionPerformed
	text_dd.setText(a.diagram.datadictionary.display());
        view_dd.setVisible(true);
    }//GEN-LAST:event_b_view_ddActionPerformed

        private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
                // TODO add your handling code here:
		JFileChooser foo=new JFileChooser();
		int ret=foo.showSaveDialog(null);
		String s;
		try {
			if(foo.getSelectedFile()==null)
				return;
			s=foo.getSelectedFile().getCanonicalPath();
		} catch (IOException e) {
			s=foo.getSelectedFile().getName();

		}
		 BufferedWriter writer = null;
        try {
            //create a temporary file
            File logFile = new File(s);

            // This will output the full path where the file will be written to...
            System.out.println(logFile.getCanonicalPath());

            writer = new BufferedWriter(new FileWriter(logFile));
            writer.write(a.diagram.datadictionary.display());
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                // Close the writer regardless of what happens...
                writer.close();
            } catch (Exception e) {
            }
        }

        }//GEN-LAST:event_jButton1ActionPerformed

        private void b_openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_openActionPerformed
                // TODO add your handling code here:
int n = JOptionPane.showConfirmDialog(
    null,
    "All Unsaved Data would be lost,Do you want to continue?",
    "Confirm",
    JOptionPane.YES_NO_OPTION);
	if(n==1)
		return;
        if(n==0){
	JFileChooser saveFile = new JFileChooser();
	saveFile.setFileFilter(new MyCustomFilter());
        saveFile.showOpenDialog(null);
	String s="test.ser";
	try {
		if(saveFile.getSelectedFile()==null)
			return;
		s=saveFile.getSelectedFile().getCanonicalPath();
		} catch (IOException e) {
			s=saveFile.getSelectedFile().getName();

		}
        if(s.contains("_SA.ser")){
	a.diagram=Diagram.get_serialize(s);
	start.setVisible(false);
        new_open.setVisible(true);
        new_design.setVisible(false);
        b.type=0;
        
        }
        if(s.contains("_SD.ser"))
        {
            a.type=0;
            b.diagram=Structure_Diagram.get_serialize(s);
	start.setVisible(false);
        new_open.setVisible(false);
        new_design.setVisible(true);
        }
        }
        //System.out.println("asdfsadf");
        }//GEN-LAST:event_b_openActionPerformed

        private void b_newActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_newActionPerformed

            
            
                    
            
            
	int n = JOptionPane.showConfirmDialog(
    null,
    "All Unsaved Data would be lost,Do you want to continue?",
    "Confirm",
    JOptionPane.YES_NO_OPTION);
	if(n==1)
		return;
        if(n==0){
	Object[] options = {"Structured Analysis",
                    "Structured Design"};
int n1 = JOptionPane.showOptionDialog(null,
    "Do you want to draw DFD or Structure Chart..?",
    "Confirmation",
    JOptionPane.YES_NO_OPTION,
    JOptionPane.QUESTION_MESSAGE,
    null,     //do not use a custom Icon
    options,  //the titles of buttons
    options[0]); //default button title
        if(n1==0)
        {
               a.diagram=new Diagram();
	a.diagram.datadictionary=new DataDictionary();
	a.diagram.datadictionary.datatypeList=new ArrayList<>();
	a.diagram.datadictionary.namesList=new ArrayList<>();
	a.diagram.arrowList=new ArrayList<>();
	a.diagram.lineList=new ArrayList<>();
	a.diagram.shapeList=new ArrayList<>();
        start.setVisible(false);
        new_open.setVisible(true);
        new_design.setVisible(false);
        a.repaint();
        b.type=0;
        }
        if(n1==1)
        {
            a.type=0;
                b.diagram=new Structure_Diagram();
	b.diagram.datadictionary=new DataDictionary();
	b.diagram.datadictionary.datatypeList=new ArrayList<>();
	b.diagram.datadictionary.namesList=new ArrayList<>();
	b.diagram.arrowList=new ArrayList<>();
        b.diagram.dataList=new ArrayList<>();
	//b.diagram.lineList=new ArrayList<>();
	b.diagram.shapeList=new ArrayList<>();
        b.repaint();
        start.setVisible(false);
        new_design.setVisible(true);
        new_open.setVisible(false);
        }
        
        
        }
	
        }//GEN-LAST:event_b_newActionPerformed

        private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
                // TODO add your handling code here:
	JFileChooser foo=new JFileChooser();
		foo.setFileFilter(new MyCustomFilter());
		int ret=foo.showSaveDialog(null);
		String s;
		try {
			if(foo.getSelectedFile()==null)
				return;
			s=foo.getSelectedFile().getCanonicalPath();
		} catch (IOException e) {
			s=foo.getSelectedFile().getName();

		}
		
		s=s+"_SA"+".ser";
		a.diagram.hassavename=true;
		a.diagram.savename=s;

		System.out.println(s);
		Diagram.set_serialisable(a.diagram,s);
        }//GEN-LAST:event_jButton3ActionPerformed

    private void b_new1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_new1ActionPerformed
              
	int n = JOptionPane.showConfirmDialog(
    null,
    "All Unsaved Data would be lost,Do you want to continue?",
    "Confirm",
    JOptionPane.YES_NO_OPTION);
	if(n==1)
		return;
        if(n==0){
	Object[] options = {"Structured Analysis",
                    "Structured Design"};
int n1 = JOptionPane.showOptionDialog(null,
    "Do you want to draw DFD or Structure Chart..?",
    "Confirmation",
    JOptionPane.YES_NO_OPTION,
    JOptionPane.QUESTION_MESSAGE,
    null,     //do not use a custom Icon
    options,  //the titles of buttons
    options[0]); //default button title
        if(n1==0)
        {
            b.type=0;
               a.diagram=new Diagram();
	a.diagram.datadictionary=new DataDictionary();
	a.diagram.datadictionary.datatypeList=new ArrayList<>();
	a.diagram.datadictionary.namesList=new ArrayList<>();
	a.diagram.arrowList=new ArrayList<>();
	a.diagram.lineList=new ArrayList<>();
	a.diagram.shapeList=new ArrayList<>();
        start.setVisible(false);
        new_open.setVisible(true);
        new_design.setVisible(false);
        a.repaint();
        }
       if(n1==1)
        {
            a.type=0;
                b.diagram=new Structure_Diagram();
	b.diagram.datadictionary=new DataDictionary();
	b.diagram.datadictionary.datatypeList=new ArrayList<>();
	b.diagram.datadictionary.namesList=new ArrayList<>();
	b.diagram.arrowList=new ArrayList<>();
        b.diagram.dataList=new ArrayList<>();
	//b.diagram.lineList=new ArrayList<>();
	b.diagram.shapeList=new ArrayList<>();
        b.repaint();
        start.setVisible(false);
        new_design.setVisible(true);
        new_open.setVisible(false);
        }
        
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_b_new1ActionPerformed

    private void b_open1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_open1ActionPerformed
        int n = JOptionPane.showConfirmDialog(
    null,
    "All Unsaved Data would be lost,Do you want to continue?",
    "Confirm",
    JOptionPane.YES_NO_OPTION);
	if(n==1)
		return;
        if(n==0){
	JFileChooser saveFile = new JFileChooser();
	saveFile.setFileFilter(new MyCustomFilter());
        saveFile.showOpenDialog(null);
	String s="test.ser";
	try {
		if(saveFile.getSelectedFile()==null)
			return;
		s=saveFile.getSelectedFile().getCanonicalPath();
		} catch (IOException e) {
			s=saveFile.getSelectedFile().getName();

		}
        if(s.contains("_SA.ser")){
	a.diagram=Diagram.get_serialize(s);
	start.setVisible(false);
        new_open.setVisible(true);
        new_design.setVisible(false);
        b.type=0;
        
        }
        if(s.contains("_SD.ser"))
        {
            a.type=0;
            b.diagram=Structure_Diagram.get_serialize(s);
	start.setVisible(false);
        new_open.setVisible(false);
        new_design.setVisible(true);
        }
        }
        //System.out.println("asdfsadf");
    }//GEN-LAST:event_b_open1ActionPerformed

    private void b_print1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_print1ActionPerformed
        Printing printing=new Printing(b);
        try {
            printing.print();
        } catch (PrinterException ex) {
            Logger.getLogger(Design.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_b_print1ActionPerformed

    private void b_color1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_color1ActionPerformed
         color_choose.setVisible(true);   
        JFrame guiFrame = new JFrame();
        b.colour = color_choose.showDialog(guiFrame, "Pick a Color"
                , Color.blue);
        change_color1.setBackground(b.colour);
System.out.println(b.colour);
    }//GEN-LAST:event_b_color1ActionPerformed

    private void b_view_dd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_view_dd1ActionPerformed
text_dd.setText(b.diagram.datadictionary.display());
        view_dd.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_b_view_dd1ActionPerformed

    private void b_Save1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_Save1ActionPerformed
        
        if(b.diagram.hassavename){
			Structure_Diagram.set_serialisable(b.diagram, b.diagram.savename);
			return;
		}
		JFileChooser foo=new JFileChooser();
		foo.setFileFilter(new MyCustomFilter());
		int ret=foo.showSaveDialog(null);
		String s;
		try {
			if(foo.getSelectedFile()==null)
				return;
			s=foo.getSelectedFile().getCanonicalPath();
		} catch (IOException e) {
			s=foo.getSelectedFile().getName();

		}
		
		s=s+"_SD"+".ser";
		b.diagram.hassavename=true;
		b.diagram.savename=s;

		System.out.println(s);
		Structure_Diagram.set_serialisable(b.diagram,s);
    }//GEN-LAST:event_b_Save1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        JFileChooser foo=new JFileChooser();
		foo.setFileFilter(new MyCustomFilter());
		int ret=foo.showSaveDialog(null);
		String s;
		try {
			if(foo.getSelectedFile()==null)
				return;
			s=foo.getSelectedFile().getCanonicalPath();
		} catch (IOException e) {
			s=foo.getSelectedFile().getName();

		}
		
		s=s+"_SD"+".ser";
		b.diagram.hassavename=true;
		b.diagram.savename=s;

		System.out.println(s);
		Structure_Diagram.set_serialisable(b.diagram,s);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void b_moduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_moduleActionPerformed
        b.type=1;
        a.type=0;
        b.lib=false;
        // TODO add your handling code here:
    }//GEN-LAST:event_b_moduleActionPerformed

    private void b_who_r_uActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_who_r_uActionPerformed
        b.type=3;
    }//GEN-LAST:event_b_who_r_uActionPerformed

    private void b_libActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_libActionPerformed
b.type=1;
        b.lib=true;          // TODO add your handling code here:
    }//GEN-LAST:event_b_libActionPerformed

    private void b_arrow_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_arrow_1ActionPerformed
        // TODO add your handling code here:
        b.type=2;
        a.type=0;
        System.out.println("aaa");
    }//GEN-LAST:event_b_arrow_1ActionPerformed

    private void draw_here1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_draw_here1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_draw_here1MouseClicked

    private void draw_here1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_draw_here1MousePressed
           System.out.println("nooooo");
        prev_size=b.diagram.shapeList.size();
        prev_size_1=b.diagram.arrowList.size();
        prev_size_2=b.diagram.dataList.size();
          if(SwingUtilities.isRightMouseButton(evt)){
	    System.out.println("lasdjf");
        if (evt.isPopupTrigger()){
	    System.out.println("lasdjfalksdjfalskfdj;aj");
            doPop(evt);
	    System.out.println("lasdjfalksdjfalskfdj;aj");
	}
    } 
    }//GEN-LAST:event_draw_here1MousePressed

    private void draw_here1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_draw_here1MouseReleased

        int new_size=b.diagram.shapeList.size();
        int new_size_1=b.diagram.arrowList.size();
        int new_size_2=b.diagram.dataList.size();
        this.setAlwaysOnTop(false);
        if(b.type==1 && !b.dragging && !b.is_inside && new_size>prev_size) 
        {
            //System.out.println("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
            
	
            get_back();
            l_1.setText("Process Name");
            l_2.setText("Process Description");
            
            
        }
        if((b.type==3) && !b.dragging && new_size_2>prev_size_2 ) 
        {
            get_back_1();
         
            l_2.setText("Entity Description");
        }
	if((b.type==4) && !b.dragging && !b.is_inside && new_size>prev_size) 
        {
            get_back_1();
        }
        if((b.type==2) && !b.dragging && new_size_1>prev_size_1) 
        {

            //get_back_1();
        }
        if(SwingUtilities.isRightMouseButton(evt)){
	    System.out.println("lasdjf");
        if (evt.isPopupTrigger()){
	    System.out.println("lasdjfalksdjfalskfdj;aj");
            doPop(evt);
	    System.out.println("lasdjfalksdjfalskfdj;aj");
	}
    } 
    }//GEN-LAST:event_draw_here1MouseReleased

    private void draw1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_draw1MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_draw1MouseReleased

        private void b_beActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_beActionPerformed
                // TODO add your handling code here:
		if(a.type!=0&&a.type!=-1){
			String s=a.diagram.checkBalanceError();
			if(s==null)
				s="No Balancing Errors";
			JOptionPane.showMessageDialog(null, s);
			

			
			
		}
        }//GEN-LAST:event_b_beActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Design.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Design.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Design.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Design.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Design().setVisible(true);
            }
        });
    }
    
        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton b_Save;
        private javax.swing.JButton b_Save1;
        private javax.swing.JButton b_arrow;
        private javax.swing.JButton b_arrow_1;
        private javax.swing.JButton b_be;
        private javax.swing.JButton b_be1;
        private javax.swing.JButton b_circle;
        private javax.swing.JButton b_color;
        private javax.swing.JButton b_color1;
        private javax.swing.JButton b_datastore;
        private javax.swing.JButton b_entity;
        private javax.swing.JButton b_lib;
        private javax.swing.JButton b_module;
        private javax.swing.JButton b_new;
        private javax.swing.JButton b_new1;
        private javax.swing.JButton b_open;
        private javax.swing.JButton b_open1;
        private javax.swing.JButton b_print;
        private javax.swing.JButton b_print1;
        private javax.swing.JButton b_view_dd;
        private javax.swing.JButton b_view_dd1;
        private javax.swing.JButton b_who_r_u;
        private javax.swing.JLabel bg;
        private javax.swing.JButton bs_new;
        private javax.swing.JButton bs_open;
        private javax.swing.JPanel change_color;
        private javax.swing.JPanel change_color1;
        private javax.swing.JColorChooser color_choose;
        private javax.swing.JComboBox combo;
        private javax.swing.JPanel draw;
        private javax.swing.JPanel draw1;
        private javax.swing.JPanel draw_here;
        private javax.swing.JPanel draw_here1;
        private javax.swing.JFrame f_1;
        private javax.swing.JButton jButton1;
        private javax.swing.JButton jButton2;
        private javax.swing.JButton jButton3;
        private javax.swing.JButton jButton4;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JLabel jLabel3;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JLabel l_1;
        private javax.swing.JLabel l_2;
        private javax.swing.JLabel l_3;
        private javax.swing.JPanel menu;
        private javax.swing.JPanel menu_design;
        private javax.swing.JPanel new_design;
        private javax.swing.JPanel new_open;
        private javax.swing.JFileChooser open_file_choose;
        private javax.swing.JTextField p_descr;
        private javax.swing.JTextField p_name;
        private javax.swing.JPanel selection;
        private javax.swing.JPanel selection1;
        private javax.swing.JPanel start;
        private javax.swing.JTextPane text_dd;
        private javax.swing.JLabel title;
        private javax.swing.JDialog view_dd;
        // End of variables declaration//GEN-END:variables
}
